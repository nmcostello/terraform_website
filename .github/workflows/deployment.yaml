name: Deploy AWS Resources in Terraform
run-name: ${{ github.actor }} deployed the Terraform code to AWS.
on: [push]

jobs:
  go-tests:
    name: Run Go Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - uses: autero1/action-terraform@v0.1.0
        with:
          terraform_version: 0.12.21
      - name: Download Go Modules
        working-directory: test
        run: go mod download
      - name: Run Go Tests
        working-directory: test
        run: go test -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform:
    needs: go-tests
    runs-on: ubuntu-latest
    env:
      TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
      TF_VAR_domain: ${{ secrets.TF_VAR_domain }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/checkout@v3
        
      - name: format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ./terraform

      - name: initialize
        id: init
        run: |
          terraform init \
            -backend-config="access_key=$AWS_ACCESS_KEY_ID" \
            -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY" \
            -backend-config="region=us-east-1" 
        working-directory: ./terraform

      - name: validate
        id: validate
        run: terraform validate
        working-directory: ./terraform
        
      - name: plan
        id: plan
        run: terraform plan
        working-directory: ./terraform

      - name:
        id: apply
        run: terraform apply -auto-approve
        working-directory: ./terraform